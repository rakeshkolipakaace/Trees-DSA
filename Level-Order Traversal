// brute force

import java.util.*;

class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        int h = height(root);

        for (int level = 1; level <= h; level++) {
            List<Integer> current = new ArrayList<>();
            getLevel(root, level, current);
            result.add(current);
        }

        return result;
    }

    private int height(TreeNode root) {
        if (root == null) return 0;
        return 1 + Math.max(height(root.left), height(root.right));
    }

    // helper to collect nodes at a given level
    private void getLevel(TreeNode root, int level, List<Integer> list) {
        if (root == null) return;
        if (level == 1) {
            list.add(root.val);
        } else {
            getLevel(root.left, level - 1, list);
            getLevel(root.right, level - 1, list);
        }
    }
}
